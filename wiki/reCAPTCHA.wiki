#summary Come aggiungere reCAPTCHA in un progetto javaEE

=ReCaptcha=

Riferimento: http://code.google.com/intl/it-IT/apis/recaptcha/docs/java.html

==Importare le libraries richieste nel progetto==
 # Scaricare la libreria recaptcha per Java: http://code.google.com/p/recaptcha/downloads/list?q=label:java-Latest
 # Scompattare e aggiungere il jar (recaptcha4j-0.0.7.jar) alle library del progetto (clic col destro sulla cartella library del war > Add jar/folder > aggiungere il jar appena scaricato)
 
==Ottenere una Recaptcha key==
 # Per poter utilizzare recaptcha bisogna registrare il nostro dominio all'indirizzo https://www.google.com/recaptcha/admin/create. 
 # Alla registrazione viene fornita un coppia chiave pubblica - chiave privata che verranno utilizzate in seguito. La chiave recaptcha automaticamente funziona non solo nel dominio per cui l'abbiamo registrata, ma anche su localhost.
 
==Nella JSP contenente il form a cui vogliamo aggiungere il Recaptcha==
Nei commenti del codice le modifiche da fare al "template" di base:
 # indicare la servlet che gestisca la richiesta del form
 # sostituire i parametri "your_public_key" e "your_private_key" con la chiave pubblica e privata ottenute prima
{{{
<!-- import della library aggiunta prima -->
<%@ page import="net.tanesha.recaptcha.ReCaptcha" %>
<%@ page import="net.tanesha.recaptcha.ReCaptchaFactory" %>

<html>
  <body>
    <!-- ovviamente bisogna indicare una servlet che gestisca la richiesta del form -->
    <form action="" method="post">
    <%
      //"your_public_key" e "your_private_key" sono rispettivamente la chiave pubblica e privata ottenute prima;
      //vanno sostituite qui, come parametri della creazione del recaptcha
      ReCaptcha c = ReCaptchaFactory.newReCaptcha("your_public_key", "your_private_key", false);
      out.print(c.createRecaptchaHtml(null, null));
    %>
      <input type="submit" value="submit" />
    </form>
  </body>
</html>
}}}

_Opzionale:_ è possibile modificare lo stile e applicare altre personalizzazioni al Recaptcha. Per farlo bisogna impostare in modo opportuno la variabile (Javascript) recpatchaOptions aggiungendo il codice opportuno nel blocco head della jsp, ad esempio come segue:
{{{
<script type="text/javascript">
  var RecaptchaOptions = {
    custom_translations : {
      instructions_visual : "Scrivi le due parole:",
      instructions_audio : "Trascrivi ci\u00f2 che senti:",
      play_again : "Riascolta la traccia audio",
      cant_hear_this : "Scarica la traccia in formato MP3",
      visual_challenge : "Modalit\u00e0 visiva",
      audio_challenge : "Modalit\u00e0 auditiva",
      refresh_btn : "Chiedi due nuove parole",
      help_btn : "Aiuto",
      incorrect_try_again : "Scorretto. Riprova."
    },
    lang : 'it', // Unavailable while writing this code (just for audio challenge)
    theme : 'clean' // Make sure there is no trailing ',' at the end of the RecaptchaOptions dictionary
  };
</script>
}}}
L'elenco delle varie personalizzazioni si trova qui: http://code.google.com/intl/it-IT/apis/recaptcha/docs/customization.html

==Nella servlet che riceverà i dati del form che abbiamo aggiunto alla JSP==
Di nuovo, le modifiche da fare al codice di base sono nei commenti:
 # impostare i campi RECAPTCHA_PRIVATE_KEY e RECAPTCHA_PUBLIC_KEY con le chiavi ottenute in precedenza
 # gestire il caso in cui sia stata data la risposta corretta e quello in cui invece la risposta sia errata
{{{
  //import della library aggiunta prima
  import net.tanesha.recaptcha.ReCaptcha;
  import net.tanesha.recaptcha.ReCaptchaFactory;
  import net.tanesha.recaptcha.ReCaptchaResponse;
	
  //"your_public_key" e "your_private_key" sono ancora la chiave pubblica e privata ottenute prima
  private static final String RECAPTCHA_PRIVATE_KEY = "your_private_key";
  private static final String RECAPTCHA_PUBLIC_KEY = "your_public_key";
	
  ReCaptcha captcha;
  ReCaptchaResponse reCaptchaResponse;
  captcha = ReCaptchaFactory.newReCaptcha(RECAPTCHA_PUBLIC_KEY, RECAPTCHA_PRIVATE_KEY, false);
	
  //recupero dal form la challenge corrente e la risposta dell'utente, rispettivamente
  captchaChallenge = request.getParameter("recaptcha_challenge_field");
  captchaResponse = request.getParameter("recaptcha_response_field");

  //verifico la correttezza della risposta
  reCaptchaResponse = captcha.checkAnswer(remoteAddr, captchaChallenge, captchaResponse);

  //gestisco la risposta corretta e la risposta errata
  if (reCaptchaResponse.isValid()) {
    //gestione risposta valida
  } else{
    //errore!!!
  }	
}}}
 